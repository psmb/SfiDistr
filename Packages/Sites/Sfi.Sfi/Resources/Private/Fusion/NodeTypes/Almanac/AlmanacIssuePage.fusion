prototype(Sfi.Sfi:AlmanacIssuePage)>
prototype(Sfi.Sfi:AlmanacIssuePage) < prototype(Sfi.Sfi:AlmanacAbstractPage) {
	@context.articleNode = ${q(documentNode).children('main').children(request.arguments.article).get(0)}
	head {
		titleTag.content = ${String.stripTags(q(request.arguments.article ? articleNode : node).property('title')) + ' | ' + Translation.translate('sfi.abbrev', null, [], null, 'Sfi.Sfi')}
	}
	body {
		renderer = Neos.Fusion:Case {
			single {
				condition = ${request.arguments.article}
				renderer = Neos.Fusion:Value {
					@context.node = ${articleNode}
					value = Sfi.Sfi:AlmanacLayout {
						title = Neos.Fusion:Value {
							@process.contentElementWrapping = Neos.Neos:ContentElementWrapping
							value = Neos.Neos:Editable {
								property = 'title'
								block = false
							}
						}
						content = Sfi.Sfi:AlmanacEntryFull
						linkToIssue = Neos.Fusion:Component {
							link = Neos.Neos:NodeUri {
								node = ${documentNode}
							}
							renderer = afx`<div class="lineHeight-single ParagraphAlt marginBottom-single"><a href={props.link} class="Link">{documentNode.properties.title} Â»</a></div>`
						}
						@cache {
							mode = 'cached'
							entryIdentifier {
								node = ${node}
							}
							entryTags {
								1 = ${Neos.Caching.nodeTag(node)}
							}
						}
					}
				}
			}
			list {
				condition = ${true}
				renderer = Sfi.Sfi:AlmanacLayout {
					title = Neos.Neos:Editable {
						property = 'title'
						block = false
					}
					content = Neos.Fusion:Component {
						description = Neos.Neos:Editable {
							property = 'description'
							block = true
						}
						main = Neos.Neos:ContentCollection {
							nodePath = 'main'
						}
						renderer = afx`
							{props.main}
						`
					}
				}
			}
		}
	}
}

root.almanacIssuePage {
	condition = ${q(node).is('[instanceof Sfi.Sfi:AlmanacIssuePage]')}
	type = 'Sfi.Sfi:AlmanacIssuePage'
}
