prototype(Sfi.Sfi:StudyProgramAsset) <  prototype(Sfi.Shared:Asset) {
	attributes.class = 'ButtonInline AssetInline'
	attributes.href = ${'asset://' + node.properties.asset.identifier}
	attributes.href.@process.convertUris = Neos.Neos:ConvertUris
	@if.assetNotEmptyOrInBackend = ${node.properties.asset.identifier != null || documentNode.context.inBackend}
}

prototype(Sfi.Sfi:StudyProgram) {
	partialRootPath = 'resource://Sfi.Sfi/Private/Partials'

	programId = ${node.properties.uriPathSegment}

	sectionMenu = ${sectionMenu}
	level = ${String.stripTags(q(node).parent().parent().property('title'))}
	division = ${String.stripTags(q(node).parent().property('title'))}

	assetDescriptionsTitle = ${'<h3 class="H3">' + Translation.translate('studyProgram.assetDescriptions', null, [], null, 'Sfi.Sfi') + '</h3>'}
	assetDescriptionsO = Neos.Neos:ContentCollection {
		nodePath = 'assetDescriptionsO'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.ochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' + value}
	}
	assetDescriptionsOZ = Neos.Neos:ContentCollection {
		nodePath = 'assetDescriptionsOZ'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.ochnoZaochnaja', null, [], null, 'Sfi.Sfi')+ '</h4>' + value}
	}
	assetDescriptionsZ = Neos.Neos:ContentCollection {
		nodePath = 'assetDescriptionsZ'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.zaochnaja', null, [], null, 'Sfi.Sfi')+ '</h4>' + value}
	}

	assetRpdTitle = ${'<h3 class="H3">' + Translation.translate('studyProgram.assetRpd', null, [], null, 'Sfi.Sfi') + '</h3>'}
	assetRpdO = Neos.Neos:ContentCollection {
		nodePath = 'assetRpdO'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.ochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' + value}
	}
	assetRpdOZ = Neos.Neos:ContentCollection {
		nodePath = 'assetRpdOZ'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.ochnoZaochnaja', null, [], null, 'Sfi.Sfi')+ '</h4>' + value}
	}
	assetRpdZ = Neos.Neos:ContentCollection {
		nodePath = 'assetRpdZ'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.zaochnaja', null, [], null, 'Sfi.Sfi')+ '</h4>' + value}
	}

	assetAccreditation = Sfi.Sfi:StudyProgramAsset {
		title = ${Translation.translate('studyProgram.assetAccreditation', null, [], null, 'Sfi.Sfi')}
		@context.node = ${q(node).children('assetAccreditation').get(0)}
	}
	assetInvoice = Sfi.Sfi:StudyProgramAsset {
		title = ${Translation.translate('studyProgram.assetInvoice', null, [], null, 'Sfi.Sfi')}
		@context.node = ${q(node).children('assetInvoice').get(0)}
	}
	assetSampleContract = Sfi.Sfi:StudyProgramAsset {
		title = ${Translation.translate('studyProgram.assetSampleContract', null, [], null, 'Sfi.Sfi')}
		@context.node = ${q(node).children('assetSampleContract').get(0)}
	}

	assetsPlanO = Neos.Neos:ContentCollection {
		nodePath = 'assetsPlanO'
		@process.title = ${'<h3 class="H3 marginVertical-single">' + Translation.translate('studyProgram.assetsPlan', null, [], null, 'Sfi.Sfi') + '</h3><h4 class="H4">' + Translation.translate('studyProgram.ochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' + value}
	}
	assetsPlanOZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsPlanOZ'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.ochnoZaochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' + value}
	}
	assetsPlanZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsPlanZ'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.zaochnaja', null, [], null, 'Sfi.Sfi')+ '</h4>' + value}
	}
	assetsAdmissionRegulations = Neos.Neos:ContentCollection {
		nodePath = 'assetsAdmissionRegulations'
	}
	assetsSubjectAnnotationsTitle = ${'<h3 class="H3">' + Translation.translate('studyProgram.assetsSubjectAnnotations', null, [], null, 'Sfi.Sfi') + '</h3>'}
	assetsSubjectAnnotationsO = Neos.Neos:ContentCollection {
		nodePath = 'assetsSubjectAnnotationsO'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.ochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' + value}
	}
	assetsSubjectAnnotationsOZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsSubjectAnnotationsOZ'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.ochnoZaochnaja', null, [], null, 'Sfi.Sfi')+ '</h4>' + value}
	}
	assetsSubjectAnnotationsZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsSubjectAnnotationsZ'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.zaochnaja', null, [], null, 'Sfi.Sfi')+ '</h4>' + value}
	}
	assetsPracticeAnnotationsTitle = ${'<h3 class="H3">' + Translation.translate('studyProgram.assetsPracticeAnnotations', null, [], null, 'Sfi.Sfi') + '</h3>'}
	assetsPracticeAnnotationsO = Neos.Neos:ContentCollection {
		nodePath = 'assetsPracticeAnnotationsO'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.ochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' + value}
	}
	assetsPracticeAnnotationsOZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsPracticeAnnotationsOZ'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.ochnoZaochnaja', null, [], null, 'Sfi.Sfi')+ '</h4>' + value}
	}
	assetsPracticeAnnotationsZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsPracticeAnnotationsZ'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.zaochnaja', null, [], null, 'Sfi.Sfi')+ '</h4>' + value}
	}
	assetsMethodicalTitle = ${'<h3 class="H3">' + Translation.translate('studyProgram.assetsMethodical', null, [], null, 'Sfi.Sfi') + '</h3>'}
	assetsMethodicalOTitle = ${(q(node).children('assetsMethodicalO').children().count() + q(node).children('fosO').children().count()) > 0 ? '<h4 class="H4">' + Translation.translate('studyProgram.ochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' : ''}
	assetsMethodicalOZTitle = ${(q(node).children('assetsMethodicalOZ').children().count() + q(node).children('fosOZ').children().count()) > 0 ? '<h4 class="H4">' + Translation.translate('studyProgram.ochnoZaochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' : ''}
	assetsMethodicalZTitle = ${(q(node).children('assetsMethodicalZ').children().count() + q(node).children('fosZ').children().count()) > 0 ? '<h4 class="H4">' + Translation.translate('studyProgram.zaochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' : ''}

	assetsMethodicalO = Neos.Neos:ContentCollection {
		nodePath = 'assetsMethodicalO'
	}
	assetsMethodicalOZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsMethodicalOZ'
	}
	assetsMethodicalZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsMethodicalZ'
	}

	upbringingO = Neos.Neos:ContentCollection {
		nodePath = 'upbringingO'
	}
	upbringingOZ = Neos.Neos:ContentCollection {
		nodePath = 'upbringingOZ'
	}
	upbringingZ = Neos.Neos:ContentCollection {
		nodePath = 'upbringingZ'
	}

	fosO = Neos.Neos:ContentCollection {
		nodePath = 'fosO'
		# @process.title = ${'<h3 class="H3">' + Translation.translate('studyProgram.fos', null, [], null, 'Sfi.Sfi') + '</h3><h4 class="H4">' + Translation.translate('studyProgram.ochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' + value}
	}
	fosOZ = Neos.Neos:ContentCollection {
		nodePath = 'fosOZ'
		# @process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.ochnoZaochnaja', null, [], null, 'Sfi.Sfi')+ '</h4>' + value}
	}
	fosZ = Neos.Neos:ContentCollection {
		nodePath = 'fosZ'
		# @process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.zaochnaja', null, [], null, 'Sfi.Sfi')+ '</h4>' + value}
	}
	description = Neos.Neos:ContentCollection {
		nodePath = 'description'
	}
	subjects = Neos.Neos:ContentCollection {
		nodePath = 'subjects'
		@process.title = ${'<h3 class="H3">' + Translation.translate('studyProgram.disciplines', null, [], null, 'Sfi.Sfi') + '</h3>' + value}
	}
	schedule = Neos.Neos:ContentCollection {
		nodePath = 'schedule'
	}
	scheduleO = Neos.Neos:ContentCollection {
		nodePath = 'scheduleO'
		@process.title = ${'<h3 class="H3 marginVertical-single">' + Translation.translate('studyProgram.grafik', null, [], null, 'Sfi.Sfi') + '</h3><h4 class="H4">' + Translation.translate('studyProgram.ochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' + value}
	}
	scheduleOZ = Neos.Neos:ContentCollection {
		nodePath = 'scheduleOZ'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.ochnoZaochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' + value}
	}
	scheduleZ = Neos.Neos:ContentCollection {
		nodePath = 'scheduleZ'
		@process.title = ${'<h4 class="H4">' + Translation.translate('studyProgram.zaochnaja', null, [], null, 'Sfi.Sfi') + '</h4>' + value}
	}
	documentSubmission = Neos.Neos:ContentCollection {
		nodePath = 'documentSubmission'
		@process.title = ${'<h3 class="H3">' + Translation.translate('studyProgram.documentsList', null, [], null, 'Sfi.Sfi') + '</h3>' + value}
	}
	exams = Neos.Neos:ContentCollection {
		nodePath = 'exams'
	}
	payment = Neos.Neos:ContentCollection {
		nodePath = 'payment'
	}
	admission = Neos.Neos:ContentCollection {
		nodePath = 'admission'
	}
	admissionContacts = Neos.Neos:ContentCollection {
		nodePath = 'admissionContacts'
	}
	numberOfSeats = Neos.Neos:ContentCollection {
		nodePath = 'numberOfSeats'
	}
	admissionRegulations = Neos.Neos:ContentCollection {
		nodePath = 'admissionRegulations'
	}
	feedback = Neos.Neos:ContentCollection {
		nodePath = 'feedback'
	}

	@cache {
		mode = 'cached'
		entryIdentifier {
			node = ${node}
			editPreviewMode = ${editPreviewMode}
		}
		entryTags {
			1 = ${Neos.Caching.nodeTag(node)}
			2 = ${Neos.Caching.descendantOfTag(node)}
		}
	}
	@process.contentElementWrapping = Neos.Neos:ContentElementWrapping
}

prototype(Sfi.Sfi:StudyProgramShort) < prototype(Neos.Fusion:Template) {
	templatePath = 'resource://Sfi.Sfi/Private/Templates/TypoScriptObjects/StudyProgramShort.html'
	node = ${node}
	title = ${String.stripTags(q(node).property('title'))}
	level = ${String.stripTags(q(node).parent().parent().property('title'))}
	division = ${String.stripTags(q(node).parent().property('title'))}
	duration = ${q(node).property('duration')}
	nextDate = ${q(node).property('nextDate')}
	educationForm = ${q(node).property('educationForm')}
	details = ${q(node).property('details')}
	price = ${q(node).property('price')}
	noLink = ${q(node).property('noLink')}
	specialityId = ${q(node).property('specialityId')}
}

prototype(Sfi.Sfi:StudyProgramShortFormal) < prototype(Neos.Fusion:Template) {
	templatePath = 'resource://Sfi.Sfi/Private/Templates/TypoScriptObjects/StudyProgramShortFormal.html'
	node = ${node}
	title = ${q(node).property('specialityId') ? (q(node).parent().parent().property('title') + ' – ' + String.stripTags(q(node).property('title'))) : (q(node).parent().parent().property('title') + ' «' + String.stripTags(q(node).property('title')) + '»')}
	level = ${q(node).property('specialityId') ? ('высшее образование – ' + q(node).parent().parent().property('title')) : ((String.stripTags(q(node).property('title')) == 'Основы языка изобразительного искусства' ? 'Дополнительная общеобразовательная общеразвивающая программа.' : 'Дополнительное профессиональное образование.' ) + ' Данный вид образования не сопровождается повышением уровня образования (п. 14 ст. 2 Федерального закона от 29.12.2012 N 273-ФЗ «Об образовании в Российской Федерации»')}
	division = ${q(node).parent().property('title')}
	duration = ${q(node).property('duration')}
	isMain = ${q(node).property('specialityId') ? true : false}
	specialityId = ${q(node).property('specialityId') || 'Не предусмотрен'}
	specialityName = Neos.Fusion:Tag {
		content = ${q(node).property('specialityName') || 'Не предусмотрено'}
		@process.editable = Neos.Neos:ContentElementEditable {
			property = 'specialityName'
		}
		@process.contentElementWrapping = Neos.Neos:ContentElementWrapping
	}
	eduProf = Neos.Fusion:Tag {
		content = ${q(node).property('eduProf')}
		@process.editable = Neos.Neos:ContentElementEditable {
			property = 'eduProf'
		}
		@process.contentElementWrapping = Neos.Neos:ContentElementWrapping
	}
	accreditationDate = ${q(node).property('accreditationDate')}
	noLink = ${q(node).property('noLink')}
	studyProgramSpecial = Neos.Fusion:Tag {
		content = ${q(node).property('studyProgramSpecial')}
		@process.editable = Neos.Neos:ContentElementEditable {
			property = 'studyProgramSpecial'
		}
		@process.contentElementWrapping = Neos.Neos:ContentElementWrapping
		@process.convertUris = Neos.Neos:ConvertUris
	}

	assetDescriptionsO = Neos.Neos:ContentCollection {
		nodePath = 'assetDescriptionsO'
	}
	assetDescriptionsOZ = Neos.Neos:ContentCollection {
		nodePath = 'assetDescriptionsOZ'
	}
	assetDescriptionsZ = Neos.Neos:ContentCollection {
		nodePath = 'assetDescriptionsZ'
	}

	assetRpdO = Neos.Neos:ContentCollection {
		nodePath = 'assetRpdO'
	}
	assetRpdOZ = Neos.Neos:ContentCollection {
		nodePath = 'assetRpdOZ'
	}
	assetRpdZ = Neos.Neos:ContentCollection {
		nodePath = 'assetRpdZ'
	}

	assetsPlanO = Neos.Neos:ContentCollection {
		nodePath = 'assetsPlanO'
	}
	isO = ${q(node).children('assetsPlanO').children().count() > 0 || documentNode.context.inBackend}
	isOZ = ${q(node).children('assetsPlanOZ').children().count() > 0 || documentNode.context.inBackend}
	isZ = ${q(node).children('assetsPlanZ').children().count() > 0 || documentNode.context.inBackend}
	rowCount = ${(this.isO ? 1 : 0) + (this.isOZ ? 1 : 0) + (this.isZ ? 1 : 0)}
	assetsPlanOZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsPlanOZ'
	}
	assetsPlanZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsPlanZ'
	}
	scheduleO = Neos.Neos:ContentCollection {
		nodePath = 'scheduleO'
	}
	scheduleOZ = Neos.Neos:ContentCollection {
		nodePath = 'scheduleOZ'
	}
	scheduleZ = Neos.Neos:ContentCollection {
		nodePath = 'scheduleZ'
	}
	practice = Neos.Neos:ContentCollection {
		nodePath = 'practice'
	}
	distantEduO = Neos.Neos:ContentCollection {
		nodePath = 'distantEduO'
	}
	distantEduOZ = Neos.Neos:ContentCollection {
		nodePath = 'distantEduOZ'
	}
	distantEduZ = Neos.Neos:ContentCollection {
		nodePath = 'distantEduZ'
	}
	assetAccreditation = Sfi.Sfi:StudyProgramAsset {
		title = 'Свидетельство о государственной аккредитации'
		@context.node = ${q(node).children('assetAccreditation').get(0)}
	}
	assetsSubjectAnnotationsO = Neos.Neos:ContentCollection {
		nodePath = 'assetsSubjectAnnotationsO'
	}
	assetsSubjectAnnotationsOZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsSubjectAnnotationsOZ'
	}
	assetsSubjectAnnotationsZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsSubjectAnnotationsZ'
	}
	assetsPracticeAnnotationsO = Neos.Neos:ContentCollection {
		nodePath = 'assetsPracticeAnnotationsO'
	}
	assetsPracticeAnnotationsOZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsPracticeAnnotationsOZ'
	}
	assetsPracticeAnnotationsZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsPracticeAnnotationsZ'
	}
	assetsMethodicalO = Neos.Neos:ContentCollection {
		nodePath = 'assetsMethodicalO'
	}
	assetsMethodicalOZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsMethodicalOZ'
	}
	assetsMethodicalZ = Neos.Neos:ContentCollection {
		nodePath = 'assetsMethodicalZ'
	}
	fosO = Neos.Neos:ContentCollection {
		nodePath = 'fosO'
	}
	fosOZ = Neos.Neos:ContentCollection {
		nodePath = 'fosOZ'
	}
	fosZ = Neos.Neos:ContentCollection {
		nodePath = 'fosZ'
	}
	upbringingO = Neos.Neos:ContentCollection {
		nodePath = 'upbringingO'
	}
	upbringingOZ = Neos.Neos:ContentCollection {
		nodePath = 'upbringingOZ'
	}
	upbringingZ = Neos.Neos:ContentCollection {
		nodePath = 'upbringingZ'
	}
	@process.contentElementWrapping = Neos.Neos:ContentElementWrapping
}

prototype(Sfi.Sfi:StudyProgramsListingAbstract) < prototype(Sfi.Shared:Sections) {
	panels.collection = 'to-be-set'

	templatePath = 'resource://Sfi.Shared/Private/Templates/NodeTypes/Sections.html'
	@context.rootNode = ${q(node).property('rootNode')}
	layout = 'Sections--Accordion'
	tabs>
	panels.itemRenderer {
		accordion = ${q(node).property('specialityId') ? q(node).property('title') + ' (' + q(node).property('specialityId') + ')' : q(node).property('title')}
		panel = Sfi.Sfi:StudyProgramShort
	}
}

prototype(Sfi.Sfi:StudyProgramsListing) < prototype(Sfi.Sfi:StudyProgramsListingAbstract) {
	@context.rootNode = ${q(node).property('rootNode')}
	panels.collection = ${q(rootNode).children().get()}
	templatePath = 'resource://Sfi.Shared/Private/Templates/NodeTypes/Sections.html'

	@cache {
		mode = 'cached'
		entryIdentifier {
			node = ${node}
		}
		entryTags {
			1 = ${Neos.Caching.nodeTag(node)}
			2 = ${Neos.Caching.nodeTag(rootNode)}
			3 = ${Neos.Caching.descendantOfTag(rootNode)}
		}
	}
}

prototype(Sfi.Sfi:StudyProgramsListingFormal) {
	templatePath = 'resource://Sfi.Sfi/Private/Fusion/NodeTypes/StudyProgramsListingFormal.html'
	collection = Neos.Fusion:Collection {
		collection = ${q(node).property('references')}
		itemName = 'node'
		itemRenderer = Sfi.Sfi:StudyProgramShortFormal
	}
	@cache {
		mode = 'cached'
		entryIdentifier {
			node = ${node}
		}
		entryTags {
			1 = ${Neos.Caching.nodeTag(node)}
			3 = ${Neos.Caching.descendantOfTag(site)}
		}
	}
}

prototype(Sfi.Sfi:StudyProgramsListingByReference) < prototype(Sfi.Sfi:StudyProgramsListingAbstract) {
	templatePath = 'resource://Sfi.Shared/Private/Templates/NodeTypes/Sections.html'
	panels.collection = ${q(node).property('references')}

	@cache {
		mode = 'cached'
		entryIdentifier {
			node = ${node}
			editPreviewMode = ${editPreviewMode}
		}
		entryTags {
			1 = ${Neos.Caching.nodeTypeTag('Sfi.Sfi:StudyProgram')}
			2 = ${Neos.Caching.nodeTag(node)}
		}
	}
}

prototype(Neos.Neos:PrimaryContent) {
	StudyProgram {
		@position = 'before default'
		condition = ${q(node).is('[instanceof Sfi.Sfi:StudyProgram]')}
		type = 'Sfi.Sfi:StudyProgram'
	}
}
